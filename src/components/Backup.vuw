<template>
    <div class="container">
      <div class="text-end mt-4">
        <button
          class="btn btn-primary"
          data-bs-toggle="modal"
          id="modal"
          type="button"
          @click="openModal(true)"
        >
          建立新的產品
        </button>
      </div>
      <table class="table mt-4">
        <thead>
          <tr>
            <th width="120">分類</th>
            <th>產品名稱</th>
            <th width="120">原價</th>
            <th width="120">售價</th>
            <th width="100">是否啟用</th>
            <th width="120">編輯</th>
          </tr>
        </thead>
        <tbody>
          <tr v-for="(item) in products" :key="item.id">
            <td>{{ item.category }}</td>
            <td>{{ item.title }}</td>
            <td class="text-end">{{ item.origin_price }}</td>
            <td class="text-end">{{ item.price }}</td>
            <td>
              <span class="text-success" v-if="item.is_enabled">啟用</span>
              <span v-else>未啟用</span>
            </td>
            <td>
              <div class="btn-group">
                <!-- 代入參數item 取得單一商品 -->
                <button
                  type="button"
                  class="btn btn-outline-primary btn-sm"
                  @click="openModal(false,item)"
                >
                  編輯
                </button>
                <button
                  type="button"
                  class="btn btn-outline-danger btn-sm"
                  @click="openDelProductModal(item)"
                >
                  刪除
                </button>
              </div>
            </td>
          </tr>
        </tbody>
      </table>
      <!-- 內層:pages,外層:pagination -->
      <Pagination :pages="pagination" @emit-pages="getProducts"></Pagination>
      <!-- del modal -->
      <!-- 將外層的tempProduct傳到內層 內層：item 外層：tempProduct  -->
      <DelModal :item="tempProduct" ref="delModal" @del-item="delProduct"></DelModal>
      <ProductModal :product="tempProduct" ref="productModal" :isNew="isNew" @update-product="updateProduct"></ProductModal>
    </div>
  </template>
  
  <script>
  import Pagination from '@/components/PaginationView.vue'
  import ProductModal from '@/components/ProductModal.vue'
  import DelModal from '@/components/DelModal.vue'
  
  export default {
    data () {
      return {
        status: false,
        pagination: {},
        // 產品的陣列
        products: [],
        isNew: true,
        tempProduct: {},
        modal: {
          editModal: '',
          delModal: ''
        }
      }
    },
    components: {
      Pagination,
      DelModal,
      ProductModal
    },
    methods: {
      // 取得產品列表
      getProducts (page = 1) {
      // 參數預設值 不代入任何參數的情況下的預設
      // 此處代表預設值為第一頁
        this.$http
          .get(
          // query的特殊代法
            `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/products/?page=${page}`
          )
          // 成功的結果
          .then((res) => {
            // 將產品列表帶入空陣列
            this.products = res.data.products
            this.pagination = res.data.pagination
          })
          // 失敗的結果
          .catch((error) => {
            console.dir(error)
          })
      },
      openModal (isNew, item) {
        if (isNew) {
          // 需要清空
          this.tempProduct = {}
          // 改變status的狀態
          this.isNew = true
          // productmodal.show()
        } else {
          // 需要將產品資料帶上去，因此使用淺拷貝方式 目的是為了不要改變原始物件資料
          this.tempProduct = { ...item }
          // 因為非新增物件，因此狀態為false
          this.isNew = false
        }
        const productComponent = this.$refs.productModal
        productComponent.openModal()
      },
      openDelProductModal (item) {
        // 將點擊的產品帶入
        this.tempProduct = { ...item }
        // 取得modal
        const delComponent = this.$refs.delModal
        delComponent.openModal()
      },
      // 更新產品
      updateProduct () {
        let api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product`
        let method = 'post'
        // 根據status來決定要串接post或是put api
        // 編輯的狀態
        if (!this.isNew) {
          api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`
          method = 'put'
        }
        const productComponent = this.$refs.productModal
        // post和put需要代的參數相同，因此可以寫在一起
        // [method]裡帶入httpmethods
        this.$http[method](api, { data: this.tempProduct })
          .then((response) => {
            alert(response.data.message)
            productComponent.hideModal()
          })
          .catch((error) => {
            alert(error.data.message)
          })
      },
  
      // 刪除產品
      delProduct () {
        const url = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`
        this.$http
          .delete(url, { data: this.tempProduct })
          .then((response) => {
            alert(response.data.message)
            this.$emit('close-del')
            // 重新取得產品列表
            this.$emit('get-products')
          })
          .catch((error) => {
            console.dir(error)
          })
      }
    },
    mounted () {
      this.getProducts()
    }
  }
  </script>
  






  <template>
    <div
        id="productModal"
        ref="productModal"
        class="modal fade"
        tabindex="-1"
        aria-labelledby="productModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog modal-xl">
          <div class="modal-content border-0">
            <div class="modal-header bg-dark text-white">
              <h5 id="productModalLabel" class="modal-title">
                <span v-if="isNew">新增產品</span>
                <span v-else>編輯產品</span>
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <div class="row">
                <div class="col-sm-4">
                  <div class="mb-2">
                    <div class="mb-3">
                      <label for="imageUrl" class="form-label"
                        >輸入圖片網址</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        placeholder="請輸入圖片連結"
                        v-model="tempProduct.imageUrl"
                      />
                    </div>
                    <!-- <div class="mb-3">
                      <label for="customFile" class="form-label"
                        >或 上傳圖片
                        <i
                          class="fas fa-spinner fa-spin"
                          v-if="status.fileUploading"
                        ></i>
                      </label>
                      <input
                        type="file"
                        id="customFile"
                        class="form-control"
                        ref="fileInput"
                        @change="uploadFile"
                      />
                    </div> -->
                    <!-- 主圖 -->
                    <img class="img-fluid" :src="tempProduct.imageUrl" alt="" />
                    <h3>多圖設置</h3>
                    <!-- 判斷是否為陣列 -->
                    <div v-if="Array.isArray(tempProduct.imagesUrl)">
                      <!-- 有陣列(圖片)的話就將它呈現出來 -->
                      <!-- key是唯一值，加入數字讓他不重複 -->
                      <template
                        v-for="(img, key) in tempProduct.imagesUrl"
                        :key="key + '77832'"
                      >
                        <input
                          type="text"
                          class="form-control"
                          placeholder="請輸入圖片連結"
                          v-model="tempProduct.imagesUrl[key]"
                        />
                        <img
                          class="img-fluid"
                          :src="tempProduct.imagesUrl[key]"
                          alt=""
                        />
                      </template>
                      <button
                        v-if="!tempProduct.imagesUrl.length || tempProduct.imagesUrl[tempProduct.imagesUrl.length -1] "
                        type="button"
                        class="btn btn-outline-primary btn-sm d-block w-100"
                        @click="tempProduct.imagesUrl.push('')"
                      >
                        新增圖片
                      </button>
                      <button
                        v-else
                        type="button"
                        class="btn btn-outline-danger btn-sm d-block w-100"
                        @click="tempProduct.imagesUrl.pop()"
                      >
                        刪除圖片
                      </button>
                    </div>
                  </div>
                </div>
                <div class="col-sm-8">
                  <div class="mb-3">
                    <label for="title" class="form-label">標題</label>
                    <input
                      id="title"
                      type="text"
                      class="form-control"
                      placeholder="請輸入標題"
                      v-model="tempProduct.title"
                    />
                  </div>
  
                  <div class="row">
                    <div class="mb-3 col-md-6">
                      <label for="category" class="form-label">分類</label>
                      <input
                        id="category"
                        type="text"
                        class="form-control"
                        placeholder="請輸入分類"
                        v-model="tempProduct.category"
                      />
                    </div>
                    <div class="mb-3 col-md-6">
                      <label for="price" class="form-label">單位</label>
                      <input
                        id="unit"
                        type="text"
                        class="form-control"
                        placeholder="請輸入單位"
                        v-model="tempProduct.unit"
                      />
                    </div>
                  </div>
  
                  <div class="row">
                    <div class="mb-3 col-md-6">
                      <label for="origin_price" class="form-label">原價</label>
                      <input
                        id="origin_price"
                        type="number"
                        min="0"
                        class="form-control"
                        placeholder="請輸入原價"
                        v-model.number="tempProduct.origin_price"
                      />
                    </div>
                    <div class="mb-3 col-md-6">
                      <label for="price" class="form-label">售價</label>
                      <input
                        id="price"
                        type="number"
                        min="0"
                        class="form-control"
                        placeholder="請輸入售價"
                        v-model.number="tempProduct.price"
                      />
                    </div>
                  </div>
                  <hr />
  
                  <div class="mb-3">
                    <label for="description" class="form-label">產品描述</label>
                    <textarea
                      id="description"
                      type="text"
                      class="form-control"
                      placeholder="請輸入產品描述"
                      v-model="tempProduct.description"
                    >
                    </textarea>
                  </div>
                  <div class="mb-3">
                    <label for="content" class="form-label">說明內容</label>
                    <textarea
                      id="description"
                      type="text"
                      class="form-control"
                      placeholder="請輸入說明內容"
                      v-model="tempProduct.content"
                    >
                    </textarea>
                  </div>
                  <div class="mb-3">
                    <div class="form-check">
                      <input
                        id="is_enabled"
                        class="form-check-input"
                        type="checkbox"
                        :true-value="1"
                        :false-value="0"
                        v-model="tempProduct.is_enabled"
                      />
                      <label class="form-check-label" for="is_enabled"
                        >是否啟用</label
                      >
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-outline-secondary"
                data-bs-dismiss="modal"
              >
                取消
              </button>
              <button
                type="button"
                class="btn btn-primary"
                @click="updateProduct()"
              >
                確認
              </button>
            </div>
          </div>
        </div>
      </div>
  </template>
  <script>
  import Modal from 'bootstrap/js/dist/modal'
  export default {
    props: {
      // 利用prop 傳入
      product: {
        type: Object,
        default () { return {} }
      },
      isNew: {
        type: Boolean,
        default: false
      }
    },
    data () {
      return {
        modal: '',
        status: {},
        tempProduct: {}
      }
    },
    emits: ['update-product'],
    methods: {
      openModal () {
        this.modal.show()
      }
      // 上傳圖片
      // upLoadFile () {
      //   // 取出上傳的檔案 為類陣列
      //   const uploadFile = this.$refs.fileInput.files[0]
      //   // 使用formdata格式 formData()物件可以產生表單格式
      //   const formData = new FormData()
      //   // 使用append方法將欄位夾帶進來 對應到file-to-upload 此欄位 後面對應到要上傳的檔案
      //   formData.append('file-to-upload', uploadFile)
      //   const url = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/upload/`
      //   this.status.fileUploading = true
      //   this.$http.post(url, formData)
      //     .then((response) => {
      //       if (response.data.success) {
      //         this.tempProduct.imageUrl = response.data.imageUrl
      //         this.$refs.fileInput.value = ''
      //       } else {
      //         this.$refs.fileInput.value = ''
      //       }
      //     })
      //     .catch((error) => {
      //       this.status.fileUploading = false
      //       console.dir(error)
      //     })
      // }
    },
    mounted () {
      this.modal = new Modal(this.$refs.productModal)
    }
  }
  </script>
  